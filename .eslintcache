[{"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\index.js":"1","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\App.js":"2","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\pages\\Login.js":"4","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\pages\\Home.js":"5","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\pages\\Register.js":"6","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\components\\MenuBar.js":"7","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\queries\\post.js":"8","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\components\\Post.js":"9","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\queries\\user.js":"10","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\util\\hooks.js":"11","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\context\\AuthContext.js":"12","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\components\\AuthRoute.js":"13","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\components\\AddPost.js":"14","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\components\\LikeButton.js":"15","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\components\\DeleteButton.js":"16","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\pages\\SinglePagePost.js":"17","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\components\\Comment.js":"18","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\components\\AddComment.js":"19"},{"size":481,"mtime":1608437000779,"results":"20","hashOfConfig":"21"},{"size":1677,"mtime":1608580773752,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":2616,"mtime":1608499965491,"results":"24","hashOfConfig":"21"},{"size":1330,"mtime":1608581010466,"results":"25","hashOfConfig":"21"},{"size":3446,"mtime":1608500083117,"results":"26","hashOfConfig":"21"},{"size":2494,"mtime":1608578123793,"results":"27","hashOfConfig":"21"},{"size":3006,"mtime":1608595544136,"results":"28","hashOfConfig":"21"},{"size":1926,"mtime":1608579055691,"results":"29","hashOfConfig":"21"},{"size":968,"mtime":1608497192372,"results":"30","hashOfConfig":"21"},{"size":445,"mtime":1608442050378,"results":"31","hashOfConfig":"21"},{"size":1551,"mtime":1608502910946,"results":"32","hashOfConfig":"21"},{"size":484,"mtime":1608503190167,"results":"33","hashOfConfig":"21"},{"size":2177,"mtime":1608537626710,"results":"34","hashOfConfig":"21"},{"size":1605,"mtime":1608588094917,"results":"35","hashOfConfig":"21"},{"size":1824,"mtime":1608595485714,"results":"36","hashOfConfig":"21"},{"size":3504,"mtime":1608595429338,"results":"37","hashOfConfig":"21"},{"size":886,"mtime":1608596097128,"results":"38","hashOfConfig":"21"},{"size":1517,"mtime":1608595866941,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1sep1hg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\index.js",[],["88","89"],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\App.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\pages\\Login.js",["90"],"import React, { useState, useContext } from 'react';\r\nimport { Form, FormGroup, Button } from 'semantic-ui-react';\r\nimport { M_LOGIN_USER } from '../queries/user';\r\nimport { useMutation } from '@apollo/client';\r\nimport { useForm } from '../util/hooks';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nfunction Login(props) {\r\n    const context = useContext(AuthContext);\r\n    const [errors, setErrors] = useState({});\r\n    const { onChange, onSubmit, values } = useForm(loginUserCallback, {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n    const [loginUser, { loading }] = useMutation(M_LOGIN_USER, {\r\n        update(_, { data: { login: userData } }) { //gets triggered after successful mutation \r\n            context.login(userData); //we destructure result to data and then data to login and get an alias for login as userData \r\n            props.history.push('/');\r\n        },\r\n        onError(err) {\r\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        },\r\n        variables: values\r\n    });\r\n    function loginUserCallback() {\r\n        loginUser();\r\n    }\r\n    return (\r\n        <div className=\"l-form-container\">\r\n            <Form onSubmit={onSubmit} noValidate className={loading ? 'loading' : ''}>\r\n                <h1>Login</h1>\r\n                <Form.Input\r\n                    label=\"Username\"\r\n                    placeholder=\"Username...\"\r\n                    name=\"username\"\r\n                    value={values.username}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    error={errors.username ? true : false}\r\n                    className=\"r-username\"\r\n                />\r\n                <Form.Input\r\n                    label=\"Password\"\r\n                    placeholder=\"Password...\"\r\n                    name=\"password\"\r\n                    value={values.password}\r\n                    onChange={onChange}\r\n                    type=\"password\"\r\n                    error={errors.password ? true : false}\r\n                    className=\"r-password\"\r\n                />\r\n\r\n                <Button positive>Log In</Button>\r\n            </Form>\r\n            {Object.keys(errors).length > 0 &&\r\n                <div className=\"ui error message\">\r\n                    <ul className=\"list\">\r\n                        {Object.values(errors).map(error =>\r\n                            <li key={error}>{error}</li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login; \r\n","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\pages\\Home.js",["91","92"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { Grid, Transition } from 'semantic-ui-react'\r\nimport { Q_GET_POSTS } from '../queries/post';\r\nimport { useQuery } from '@apollo/client';\r\nimport Post from '../components/Post';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport AddPost from '../components/AddPost';\r\n\r\nfunction Home() {\r\n    const { user } = useContext(AuthContext);\r\n    const { loading, data: { getPosts: posts } = {} } = useQuery(Q_GET_POSTS);\r\n    return (\r\n        <Grid columns={3}>\r\n            <Grid.Row>\r\n                <h1 className=\"posts-h1\">Recent Posts</h1>\r\n            </Grid.Row>\r\n            {user &&\r\n                <Grid.Column>\r\n                    <AddPost></AddPost>\r\n                </Grid.Column>}\r\n            <Grid.Row>\r\n                {\r\n\r\n                    loading ? (<h1>Loading posts...</h1>) :\r\n                        <Transition.Group> {\r\n                            posts && posts.map(post => (\r\n                                <Grid.Column key={post.id}>\r\n                                    <Post post={post} />\r\n                                </Grid.Column>\r\n\r\n                            ))}\r\n                        </Transition.Group>\r\n                }\r\n            </Grid.Row>\r\n        </Grid>\r\n    );\r\n}\r\nexport default Home; \r\n","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\pages\\Register.js",["93"],"import React, { useState, useContext } from 'react';\r\nimport { Form, FormGroup, Button } from 'semantic-ui-react';\r\nimport { M_REGISTER_USER } from '../queries/user';\r\nimport { useMutation } from '@apollo/client';\r\nimport { useForm } from '../util/hooks';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nfunction Register(props) {\r\n    const context = useContext(AuthContext);\r\n    const [errors, setErrors] = useState({});\r\n    const { onChange, onSubmit, values } = useForm(registerUser, {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n    const [addUser, { loading }] = useMutation(M_REGISTER_USER, {\r\n        update(_, { data: { register: userData } }) { //gets triggered after successful mutation \r\n            //console.log(result);\r\n            context.login(userData);\r\n            props.history.push('/');\r\n        },\r\n        onError(err) {\r\n            //console.log(err.graphQLErrors[0].extensions.exception.errors);\r\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        },\r\n        variables: values\r\n    });\r\n    function registerUser() {\r\n        addUser();\r\n    }\r\n    return (\r\n        <div className=\"r-form-container\">\r\n            <Form onSubmit={onSubmit} noValidate className={loading ? 'loading' : ''}>\r\n                <h1>Register</h1>\r\n                <Form.Input\r\n                    label=\"Username\"\r\n                    placeholder=\"Username...\"\r\n                    name=\"username\"\r\n                    value={values.username}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    error={errors.username ? true : false}\r\n                    className=\"r-username\"\r\n                />\r\n                <Form.Input\r\n                    label=\"Email\"\r\n                    placeholder=\"Email...\"\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    onChange={onChange}\r\n                    type=\"email\"\r\n                    error={errors.email ? true : false}\r\n                    className=\"r-email\"\r\n                />\r\n\r\n                <Form.Input\r\n                    label=\"Password\"\r\n                    placeholder=\"Password...\"\r\n                    name=\"password\"\r\n                    value={values.password}\r\n                    onChange={onChange}\r\n                    type=\"password\"\r\n                    error={errors.password ? true : false}\r\n                    className=\"r-password\"\r\n                />\r\n                <Form.Input\r\n                    label=\"Confirm Password\"\r\n                    placeholder=\"Confirm Password...\"\r\n                    name=\"confirmPassword\"\r\n                    value={values.confirmPassword}\r\n                    onChange={onChange}\r\n                    type=\"password\"\r\n                    error={errors.password ? true : false}\r\n                    className=\"r-c-password\"\r\n                />\r\n                <Button positive>Register</Button>\r\n            </Form>\r\n            {Object.keys(errors).length > 0 &&\r\n                <div className=\"ui error message\">\r\n                    <ul className=\"list\">\r\n                        {Object.values(errors).map(error =>\r\n                            <li key={error}>{error}</li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register; ","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\components\\MenuBar.js",["94"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nfunction MenuBar() {\r\n    const { user, logout } = useContext(AuthContext);\r\n    const handleItemClick = (e, { name }) => setActivePage(name);\r\n    const entirePathName = window.location.pathname;\r\n    const path = entirePathName === '/' ? 'home' : entirePathName.substr(1);\r\n    const [activePage, setActivePage] = useState(path);\r\n    const menuBar = (\r\n        user ? (\r\n            <div>\r\n                <Menu pointing secondary size=\"massive\" color=\"green\">\r\n                    <Menu.Item\r\n                        name={user.username}\r\n                        active\r\n                        as={Link}\r\n                        to='/'\r\n                    />\r\n\r\n                    <Menu.Menu position='right'>\r\n                        <Menu.Item\r\n                            name='logout'\r\n                            onClick={logout}\r\n                        />\r\n                    </Menu.Menu>\r\n                </Menu >\r\n            </div >\r\n        ) : (\r\n                <div>\r\n                    <Menu pointing secondary size=\"massive\" color=\"green\">\r\n                        <Menu.Item\r\n                            name='home'\r\n                            active={activePage === 'home'\r\n                            }\r\n                            onClick={handleItemClick}\r\n                            as={Link}\r\n                            to='/'\r\n                        />\r\n\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item\r\n                                name='login'\r\n                                active={activePage === 'login'}\r\n                                onClick={handleItemClick}\r\n                                as={Link}\r\n                                to='/login'\r\n\r\n                            />\r\n                            <Menu.Item\r\n                                name='register'\r\n                                active={activePage === 'register'}\r\n                                onClick={handleItemClick}\r\n                                as={Link}\r\n                                to='/register'\r\n                            />\r\n                        </Menu.Menu>\r\n                    </Menu >\r\n                </div >\r\n            )\r\n    );\r\n    return menuBar;\r\n}\r\n\r\nexport default MenuBar;\r\n\r\n","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\queries\\post.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\components\\Post.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\queries\\user.js",[],["95","96"],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\util\\hooks.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\components\\AuthRoute.js",["97"],"import React, { Component, useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst AuthRoute = ({ component: Component, ...rest }) => {\r\n    const { user } = useContext(AuthContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                user ? <Redirect to=\"/\" /> : <Component {...props} />\r\n            } />\r\n    );\r\n};\r\n\r\nexport default AuthRoute; ","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\components\\AddPost.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\components\\LikeButton.js",["98"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { Button, Icon, Label } from 'semantic-ui-react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { M_LIKE_POST } from '../queries/post';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nfunction LikeButton({ post: { id, likes, likeCount } }) {\r\n    const { user } = useContext(AuthContext);\r\n    const [liked, setLiked] = useState(false);\r\n    const [likePost, { error }] = useMutation(M_LIKE_POST, {\r\n        variables: {\r\n            postId: id\r\n        },\r\n        onError(err) {\r\n\r\n        }\r\n    });\r\n    useEffect(() => {\r\n        if (user && likes.find(like => like.username === user.username)) {\r\n            setLiked(true);\r\n        } else {\r\n            setLiked(false);\r\n        }\r\n    }, [user, likes]);\r\n    const likeButton = user ? (\r\n        liked ? (\r\n            <Button color='red' onClick={likePost}>\r\n                <Icon name='heart' />\r\n            </Button>\r\n        ) : (\r\n                <Button color='red' onClick={likePost} basic>\r\n                    <Icon name='heart' />\r\n                </Button>\r\n            )\r\n    ) : (\r\n            <Button color='red' onClick={likePost} as={Link} to='/login' basic>\r\n                <Icon name='heart' />\r\n            </Button>\r\n        );\r\n    return (\r\n        <Button as='div' labelPosition='right'>\r\n            {likeButton}\r\n            <Label as='a' basic color='red' pointing='left'>\r\n                {likeCount}\r\n            </Label>\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default LikeButton; ","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\components\\DeleteButton.js",["99","100"],"import React, { useContext, useState } from 'react';\r\nimport { Button, Icon, Confirm } from 'semantic-ui-react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useMutation } from '@apollo/client';\r\nimport { M_DELETE_POST, Q_GET_POSTS, M_DELETE_COMMENT } from '../queries/post';\r\n\r\n\r\nfunction DeleteButton({ postId, commentId, deleteCallback }) {\r\n    const [confirmOpen, setConfirmOpen] = useState(false);\r\n    const { user } = useContext(AuthContext);\r\n    const mutation = commentId ? M_DELETE_COMMENT : M_DELETE_POST;\r\n    const [deletePost, { error }] = useMutation(mutation, {\r\n        update(proxy, result) {\r\n            if (!commentId) {\r\n                const data = proxy.readQuery({\r\n                    query: Q_GET_POSTS\r\n                }); //this query will access the inmemory cache on the client\r\n                const newData = data.getPosts.filter(d => d.id !== postId);\r\n                proxy.writeQuery({\r\n                    query: Q_GET_POSTS,\r\n                    data: {\r\n                        getPosts: newData,\r\n                    },\r\n                });\r\n            }\r\n            if (deleteCallback) {\r\n                deleteCallback();\r\n            }\r\n        },\r\n        onError(err) {\r\n            console.log(err);\r\n        },\r\n        variables: {\r\n            postId,\r\n            commentId\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Button as='div' negative floated='right'\r\n                onClick={() => setConfirmOpen(true)}>\r\n                <Icon name='trash' style={{ margin: 0 }} />\r\n            </Button>\r\n            <Confirm\r\n                open={confirmOpen}\r\n                onCancel={() => setConfirmOpen(false)}\r\n                onConfirm={deletePost}>\r\n            </Confirm>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DeleteButton;","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\pages\\SinglePagePost.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\components\\Comment.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\simple-twitter-clone\\client\\src\\components\\AddComment.js",["101","102"],"import React, { useState, useRef, useContext } from 'react';\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { M_ADD_COMMENT } from '../queries/post';\r\n\r\n\r\nfunction AddComment({ postId }) {\r\n    const [comment, setComment] = useState('');\r\n    const addCommentInputRef = useRef(null);\r\n    const [addComment, { error }] = useMutation(M_ADD_COMMENT, {\r\n        update(_, result) {\r\n            setComment('');\r\n            addCommentInputRef.current.blur();\r\n        },\r\n        variables: {\r\n            postId: postId,\r\n            body: comment\r\n        },\r\n        onError(err) {\r\n\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Form onSubmit={addComment}>\r\n            <div className=\"\">\r\n                <input\r\n                    ref={addCommentInputRef}\r\n                    autoComplete=\"off\"\r\n                    className=\"comment\"\r\n                    rows=\"2\"\r\n                    type=\"text\"\r\n                    placeholder=\"Comment here...\"\r\n                    name=\"comment\"\r\n                    value={comment}\r\n                    onChange={event => setComment(event.target.value)} />\r\n            </div>\r\n            <Button\r\n                type=\"submit\"\r\n                className=\"ui button green\"\r\n                disabled={comment.trim() === ''}\r\n                onClick={addComment}\r\n                style={{ margin: \"10px 0px\" }}>\r\n                Add\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default AddComment;",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":16,"nodeType":"109","messageId":"110","endLine":2,"endColumn":25},{"ruleId":"107","severity":1,"message":"111","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"112","line":1,"column":28,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"108","line":2,"column":16,"nodeType":"109","messageId":"110","endLine":2,"endColumn":25},{"ruleId":"107","severity":1,"message":"111","line":1,"column":39,"nodeType":"109","messageId":"110","endLine":1,"endColumn":48},{"ruleId":"103","replacedBy":"113"},{"ruleId":"105","replacedBy":"114"},{"ruleId":"107","severity":1,"message":"115","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"116","line":11,"column":24,"nodeType":"109","messageId":"110","endLine":11,"endColumn":29},{"ruleId":"107","severity":1,"message":"117","line":10,"column":13,"nodeType":"109","messageId":"110","endLine":10,"endColumn":17},{"ruleId":"107","severity":1,"message":"116","line":12,"column":26,"nodeType":"109","messageId":"110","endLine":12,"endColumn":31},{"ruleId":"107","severity":1,"message":"118","line":1,"column":35,"nodeType":"109","messageId":"110","endLine":1,"endColumn":45},{"ruleId":"107","severity":1,"message":"116","line":10,"column":26,"nodeType":"109","messageId":"110","endLine":10,"endColumn":31},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'FormGroup' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.",["119"],["120"],"'Component' is defined but never used.","'error' is assigned a value but never used.","'user' is assigned a value but never used.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation"]